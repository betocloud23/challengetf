name: Deploy Azure Resources using Terraform

on:
  pull_request:
    branches:
      - main  # Se ejecuta cuando se crea o actualiza un PR hacia la rama main
      
  workflow_dispatch:  # Permite ejecutar manualmente el workflow desde la pestaÃ±a de Actions

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout de 30 minutos para este job

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        client-secret: ${{ secrets.ARM_CLIENT_SECRET }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Create Backend Storage Container if Not Exists
      run: |
        az storage container create \
          --name tfstate \
          --account-name tfstatesatrazact \
          --auth-mode login
      continue-on-error: true

    - name: Break Lease (if needed)
      run: |
        az storage blob lease break \
          --account-name tfstatesatrazact \
          --container-name tfstate \
          --blob-name prod.terraform.tfstate \
          --auth-mode login
      continue-on-error: true

    - name: Configure Terraform backend
      run: |
        cat > backend.tf <<EOF
        terraform {
          backend "azurerm" {
            resource_group_name   = "tfstate-rg"
            storage_account_name  = "tfstatesatrazact"
            container_name        = "tfstate"
            key                   = "prod.terraform.tfstate"
          }
        }
        EOF

    - name: Terraform Init
      run: terraform init -input=false
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
